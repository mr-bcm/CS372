/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pr4_1;

import java.awt.Color;
import java.awt.Point;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import pr4_1.FileIO.*;

/**
 *
 * @author Brennan
 */
public class RestaurantReviewer extends javax.swing.JFrame {

    DefaultTableModel model;    // for past reviews table (tbReviews)
    int ratingChoice = 1;
    String path = "C:\\Users\\Brennan\\Documents\\GitHub\\CS372\\HW04\\PR4_1\\src\\pr4_1\\FileIO\\TextTest.txt";

    /**
     * Creates new form RestaurantReviewer
     */
    public RestaurantReviewer() {
        initComponents();
        // RetrieveSavedData();
        updateTable();
    }

    public List<Reviewer> RetrieveSavedData() {
        ReadFile rf = new ReadFile(path);

        List<Reviewer> revList = new ArrayList<Reviewer>();
        List<String> savedRevs = new ArrayList<String>();
        rf.readFile();
        savedRevs = rf.getContents();

        String name = "";
        String addr = "";
        String review = "";
        int rating = 0;

        try {
            for (int i = 0; i < savedRevs.size(); i++) {
                String[] temp = savedRevs.get(i).split("\\|");
                name = temp[0];
                addr = temp[1];
                review = temp[2];
                rating = Integer.parseInt(temp[3]);

                Reviewer tempRev = new Reviewer(name, addr, review, rating);
                revList.add(tempRev);
            }
        } catch (Exception e) {
            System.out.print("ERROR: ");
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
        return revList;
    }

    public void updateTable() {
        List<Reviewer> revList = RetrieveSavedData();

        try {
            // Write the list of saved events to the JTable
            model = (DefaultTableModel) tbReviews.getModel();
            for (int i = 0; i < revList.size(); i++) {
                Object[] row = {revList.get(i).name, revList.get(i).rating};
                model.addRow(row);
            }

            // Sort Table On Table Header Click
            tbReviews.setAutoCreateRowSorter(rootPaneCheckingEnabled);
        } catch (Exception e) {
            System.out.println("ERROR: Populating startup table.");
            System.out.print("MSG: ");
            System.out.println(e.getMessage());
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        taReview = new javax.swing.JTextArea();
        lbName = new javax.swing.JLabel();
        lbAddr = new javax.swing.JLabel();
        lbRating = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbReviews = new javax.swing.JTable();
        tfName = new javax.swing.JTextField();
        tfAddr = new javax.swing.JTextField();
        cbRating = new javax.swing.JComboBox();
        lbPReviews = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        taReviewD = new javax.swing.JTextArea();
        lbName1 = new javax.swing.JLabel();
        lbAddr1 = new javax.swing.JLabel();
        lbRating1 = new javax.swing.JLabel();
        tfNameD = new javax.swing.JTextField();
        tfAddrD = new javax.swing.JTextField();
        tfRatingD = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        taReview.setColumns(20);
        taReview.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        taReview.setLineWrap(true);
        taReview.setRows(5);
        jScrollPane1.setViewportView(taReview);

        lbName.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbName.setText("Name");

        lbAddr.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbAddr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAddr.setText("Address");

        lbRating.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbRating.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbRating.setText("Rating");

        tbReviews.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        tbReviews.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Restaraunt", "Raiting"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbReviews.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbReviewsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbReviews);

        tfName.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N

        tfAddr.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N

        cbRating.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        cbRating.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 Star", "2 Star", "3 Star", "4 Star", "5 Star" }));
        cbRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRatingActionPerformed(evt);
            }
        });

        lbPReviews.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbPReviews.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPReviews.setText("Past Reviews");

        btnSubmit.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        btnSubmit.setText("Submit Review");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        taReviewD.setEditable(false);
        taReviewD.setColumns(20);
        taReviewD.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        taReviewD.setLineWrap(true);
        taReviewD.setRows(5);
        jScrollPane3.setViewportView(taReviewD);

        lbName1.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbName1.setText("Restaraunt");

        lbAddr1.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbAddr1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAddr1.setText("Address");

        lbRating1.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbRating1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbRating1.setText("Rating");

        tfNameD.setEditable(false);
        tfNameD.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N

        tfAddrD.setEditable(false);
        tfAddrD.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N

        tfRatingD.setEditable(false);
        tfRatingD.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lbPReviews, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbName1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNameD, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbAddr1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfAddrD, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfRatingD)
                            .addComponent(lbRating1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))
                    .addComponent(jScrollPane3))
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSubmit)
                        .addGap(175, 175, 175))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfName)
                                .addComponent(lbName, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfAddr)
                                .addComponent(lbAddr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbRating, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbRating, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName)
                    .addComponent(lbAddr)
                    .addComponent(lbRating))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSubmit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbName1)
                            .addComponent(lbAddr1)
                            .addComponent(lbRating1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfNameD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfAddrD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfRatingD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbPReviews)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbReviewsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbReviewsMouseClicked
        List<Reviewer> revList = RetrieveSavedData();

        int row = tbReviews.rowAtPoint(new Point(evt.getX(), evt.getY()));
        int col = tbReviews.columnAtPoint(new Point(evt.getX(), evt.getY()));

        try {
            if (evt.getClickCount() == 2) {
                tfNameD.setText(revList.get(row).name);
                tfAddrD.setText(revList.get(row).addr);
                taReviewD.setText(revList.get(row).review);
                String rate = "" + revList.get(row).rating;
                tfRatingD.setText(rate);
            }
        } catch (Exception e) {
            System.out.print("ERROR: ");
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_tbReviewsMouseClicked

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if (this.tfName.getText().isEmpty() || this.taReview.getText().isEmpty()) {
            if (this.tfName.getText().isEmpty()) {
                tfName.setBackground(Color.red);
            } else if (this.taReview.getText().isEmpty()) {
                taReview.setBackground(Color.red);
            }
        } else {
            tfName.setBackground(Color.white);
            taReview.setBackground(Color.white);

            // Get user input
            this.tfName.getText();
            this.tfAddr.getText();
            this.taReview.getText();

            Reviewer newEntry = new Reviewer(tfName.getText(), tfAddr.getText(), taReview.getText(), ratingChoice);  // Create new Reviewer object of newly added user data
            // revList.add(newEntry);                  // add the new entry to the list of existing ones
            WriteFile wf = new WriteFile(path);     // initialize object to write to file
            wf.writeString(newEntry.outputReviewerPattern());   // write the new review object to file

            updateTable();

            // Reset Text Boxes
            tfName.setText("");
            tfAddr.setText("");
            taReview.setText("");
        }
        // cbRating
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRatingActionPerformed
        JComboBox cbox = (JComboBox) evt.getSource();
        String comboChoice = (String) cbox.getSelectedItem();

        try {
            if (comboChoice.equals("1 Star")) {
                ratingChoice = 1;
            } else if (comboChoice.equals("2 Star")) {
                ratingChoice = 2;
            } else if (comboChoice.equals("3 Star")) {
                ratingChoice = 3;
            } else if (comboChoice.equals("4 Star")) {
                ratingChoice = 4;
            } else if (comboChoice.equals("5 Star")) {
                ratingChoice = 5;
            }
        } catch (Exception e) {
            System.out.print("ERROR: ");
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_cbRatingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestaurantReviewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestaurantReviewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestaurantReviewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestaurantReviewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestaurantReviewer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cbRating;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbAddr;
    private javax.swing.JLabel lbAddr1;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbName1;
    private javax.swing.JLabel lbPReviews;
    private javax.swing.JLabel lbRating;
    private javax.swing.JLabel lbRating1;
    private javax.swing.JTextArea taReview;
    private javax.swing.JTextArea taReviewD;
    private javax.swing.JTable tbReviews;
    private javax.swing.JTextField tfAddr;
    private javax.swing.JTextField tfAddrD;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfNameD;
    private javax.swing.JTextField tfRatingD;
    // End of variables declaration//GEN-END:variables
}
